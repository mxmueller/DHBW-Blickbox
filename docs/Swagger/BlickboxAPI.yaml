openapi: 3.0.3
info:
  title: DHBW-Blickbox API 
  description: |-
  
    Die API stellt eine Schnittstelle zwischen der DHBW-Blickbox und dem Externen Server bereit. Mit ihr ist es möglich Messdaten in die Datenbank zu schreiben, sowie zu checken ob die Systeme miterinander Verbunden sind und funktionieren.
      Der Code ist im [DHBW-Blickbox Repo](https://github.com/mxmueller/DHBW-Blickbox) zu finden.


  contact:
    email: aronseidl17@gmail.com
  version: 1.0.0
servers:
  - url: https://dhbwapi.maytastix.de/iot/api
tags:
  - name: Health Monitoring
    description: Checkt ob die Systeme laufen

  - name: insert
    description: Daten wrden in die Datanbank geschrieben
paths:
  /pingDB:
    get:
      tags:
        - Health Monitoring
      summary: Checkt ob die Datenbank läuft.
      responses:
        '200':
          description: 'Verbindung steht'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Verbindung zur Datenbank steht'
        '500':
          description: Exception
  /pingGF:
    get:
      tags:
        - Health Monitoring
      summary: Checkt ob der Grafana Server läuft.
      responses:
        '200':
          description: 'Verbindung steht'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Verbindung zu Grafana steht'         
        '503':
          description: Fehler bei der Verbindung
          content:
            application/json:
              schema:
                type: object
                properties:
                  Fehler:
                    type: string
                    example: 'Keine Verbindung zum Grafana Server' 
                    
  /pingBB:
    get:
      tags:
        - Health Monitoring
      summary: Bekommt den zuletzt online Wert zurück.
      responses:
        '200':
          description: 'Abruf erfolgreich'
          content:
            application/json:
              schema:
                type: object
                properties:
                  last-online:
                    type: string
                    example: '2024-03-26 00:26:53'            
            
        '500':
          description: Exception

  /pingBB_:
    post:
      tags:
        - Health Monitoring
      summary: Sendet einen zuletzt online Wert.
      responses:
        '200':
          description: 'Einfügen erfolgreich'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Daten erfolgreich eingefügt!' 
        '401':
          description: Header fehlt, Unauthorisierter Acess!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Unauthorized'
            
        '500':
          description: Exception


       
  /insert/temperature:
    post:
      tags:
        - insert
      summary: Ein neuen Temperatur Wert hinzufügen
      description: Füg einen neuen Temperatur Wert hinzu.
      requestBody:
        description: Erstelle einen neuen Temperatur Wert
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Temperature'
        required: true
      responses:
        '200':
          description: Wert erfolgreich eingefügt
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Daten erfolgreich eingefügt'         

        '400':
          description: Falscher Input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Falscher Input'
        '401':
          description: Header fehlt, Unauthorisierter Acess!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Unauthorized'
        '500':
          description: Exception
  /insert/air-humidity:
    post:
      tags:
        - insert
      summary: Ein neuen Luftfeuchtigkeits Wert hinzufügen
      description: Füg einen neuen Luftfeuchtigkeits Wert hinzu.
      requestBody:
        description: Erstelle einen neuen Luftfeuchtigkeits Wert
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Luftfeuchtigkeit'
        required: true
      responses:
        '200':
          description: Wert erfolgreich eingefügt
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Daten erfolgreich eingefügt'         

        '400':
          description: Falscher Input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Falscher Input'
        '401':
          description: Header fehlt, Unauthorisierter Acess!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Unauthorized'
        '500':
          description: Exception
  /insert/wind-speed:
    post:
      tags:
        - insert
      summary: Ein neuen Windgeschwindigkeits Wert hinzufügen
      description: Füg einen neuen Windgeschwindigkeits Wert hinzu.
      requestBody:
        description: Erstelle einen neuen Windgeschwindigkeits Wert
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Windgeschwindigkeit'
        required: true
      responses:
        '200':
          description: Wert erfolgreich eingefügt
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Daten erfolgreich eingefügt'         

        '400':
          description: Falscher Input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Falscher Input'
        '401':
          description: Header fehlt, Unauthorisierter Acess!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Unauthorized'
        '500':
          description: Exception
  
  /insert/wind-direction:
    post:
      tags:
        - insert
      summary: Ein neuen Windrichtungs Wert hinzufügen
      description: Füg einen neuen Windrichtungs Wert hinzu.
      requestBody:
        description: Erstelle einen neuen Windrichtungs Wert
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Windrichtung'
        required: true
      responses:
        '200':
          description: Wert erfolgreich eingefügt
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Daten erfolgreich eingefügt'         

        '400':
          description: Falscher Input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Falscher Input'
        '401':
          description: Header fehlt, Unauthorisierter Acess!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Unauthorized'
        '500':
          description: Exception

  /insert/rain:
    post:
      tags:
        - insert
      summary: Ein neuen Regenmenge Wert hinzufügen
      description: Füg einen neuen Regenmenge Wert hinzu.
      requestBody:
        description: Erstelle einen neuen Regenmenge Wert
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Regenmenge'
        required: true
      responses:
        '200':
          description: Wert erfolgreich eingefügt
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Daten erfolgreich eingefügt'         

        '400':
          description: Falscher Input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Falscher Input'
        '401':
          description: Header fehlt, Unauthorisierter Acess!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Unauthorized'
        '500':
          description: Exception
          
  /insert/battery-charge:
    post:
      tags:
        - insert
      summary: Ein neuen Akkustands Wert hinzufügen
      description: Füg einen neuen Akkustand Wert hinzu.
      requestBody:
        description: Erstelle einen neuen Akkustand Wert
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Akkustand'
        required: true
      responses:
        '200':
          description: Wert erfolgreich eingefügt
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Daten erfolgreich eingefügt'         

        '400':
          description: Falscher Input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Falscher Input'
        '401':
          description: Header fehlt, Unauthorisierter Acess!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Unauthorized'
        '500':
          description: Exception
          
  /insert/battery-voltage:
    post:
      tags:
        - insert
      summary: Ein neuen Akkustromspannungs Wert hinzufügen
      description: Füg einen neuen Akkustromspannungs Wert hinzu.
      requestBody:
        description: Erstelle einen neuen Akkustromspannungs Wert
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Akkustromspannung'
        required: true
      responses:
        '200':
          description: Wert erfolgreich eingefügt
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Daten erfolgreich eingefügt'         

        '400':
          description: Falscher Input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Falscher Input'
        '401':
          description: Header fehlt, Unauthorisierter Acess!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Unauthorized'
        '500':
          description: Exception
          
components:
  schemas:
    Temperature:
      required:
        - temperature
      type: object
      properties:
        timestamp:
          type: string
          example: "2024-02-23 19:32:23"
        temperature:
          type: number
          example: 27.8
    Luftfeuchtigkeit:
      required:
        - air_humidity
      type: object
      properties:
        timestamp:
          type: string
          example: "2024-02-23 19:32:23"
        air_humidity:
          type: number
          example: 13.2
    Windgeschwindigkeit:
      required:
        - wind_speed
      type: object
      properties:
        timestamp:
          type: string
          example: "2024-02-23 19:32:23"
        wind_speed:
          type: number
          example: 120.0
    Windrichtung:
      required:
        - wind_direction
      type: object
      properties:
        timestamp:
          type: string
          example: "2024-02-23 19:32:23"
        wind_direction:
          type: number
          example: 81
    Regenmenge:
      required:
        - rain
      type: object
      properties:
        timestamp:
          type: string
          example: "2024-02-23 19:32:23"
        rain:
          type: number
          example: 49.3
    Akkustand:
      required:
        - battery_charge
      type: object
      properties:
        timestamp:
          type: string
          example: "2024-02-23 19:32:23"
        battery_charge:
          type: number
          example: 49.3
    Akkustromspannung:
      required:
        - battery_voltage
      type: object
      properties:
        timestamp:
          type: string
          example: "2024-02-23 19:32:23"
        battery_voltage:
          type: number
          example: 4.5
